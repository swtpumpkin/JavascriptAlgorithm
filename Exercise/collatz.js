//1937년 Collatz란 사람에 의해 제기된 이 추측은, 입력된 수가 짝수라면 2로 나누고, 홀수라면 3을 곱하고 1을 더한 다음, 결과로 나온 수에 같은 작업을 1이 될 때까지 반복할 경우 모든 수가 1이 된다는 추측입니다. 예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. collatz 함수를 만들어 입력된 수가 몇 번 만에 1이 되는지 반환해 주세요. 단, 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.

function collatz(num) {
  var count = 0;
  //결과가 나올 때 까지 도는 무한루프를 생성한다.
  while (true) {
    //500번 이상 돌게 되면 -1을 반환한다.
    if(count>=500){
      return -1;
    // num이 1이 아니다면 다음과 같은 if문 안으로 들어간다.
    }else if(num != 1){
      //홀수이면 *3+1을 실행하고 짝수이면 /2를 실행한다.
      (num%2)? num=num*3+1 : num=num/2;
    }else if(num === 1){
      return count;
    }
    //1사이클 돌 때마다 카운트를 한다.
    count ++;
  }
}
console.log(collatz(6)); //8
console.log(collatz(8)); //3
console.log(collatz(1256699)); //-1